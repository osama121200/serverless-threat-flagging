import json
import boto3
import os
from datetime import datetime

s3 = boto3.client('s3')
sns = boto3.client('sns')
dynamodb = boto3.resource('dynamodb')

QUARANTINE_BUCKET = os.environ['QUARANTINE_BUCKET']
DYNAMODB_TABLE = os.environ['DYNAMODB_TABLE']
SNS_TOPIC_ARN = os.environ['SNS_TOPIC_ARN']

def lambda_handler(event, context):
    
    if 'httpMethod' in event:
     print("Lambda triggered via API Gateway")
    return {
        'statusCode': 200,
        'body': json.dumps("Triggered by API Gateway successfully.")
    }

    table = dynamodb.Table(DYNAMODB_TABLE)
    
    for record in event['Records']:
        bucket = record['s3']['bucket']['name']
        key = record['s3']['object']['key']
        size = record['s3']['object']['size']

        print(f"New file uploaded: {key}")
        print(f"Bucket: {bucket}")
        print(f"Size: {size} bytes")

        status = "safe"

        if "suspicious" in key.lower():

            copy_source = {'Bucket': bucket, 'Key': key}
            s3.copy_object(CopySource=copy_source, Bucket=QUARANTINE_BUCKET, Key=key)
            s3.delete_object(Bucket=bucket, Key=key)
            print(f"Moved suspicious file {key} to quarantine.")
            status = "quarantined"

            sns.publish(
                TopicArn=SNS_TOPIC_ARN,
                Message=f"Suspicious file '{key}' moved to quarantine.",
                Subject="Alert: Suspicious File Detected"
            )
        else:
            print(f"File {key} is safe.")

        table.put_item(
            Item={
                'file_name': key,
                'bucket': bucket,
                'status': status,
                'timestamp': datetime.utcnow().isoformat()
            }
        )

    return {
        'statusCode': 200,
        'body': json.dumps('Processing complete.')
    }
